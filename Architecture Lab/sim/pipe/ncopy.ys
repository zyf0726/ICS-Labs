# Name: Yunfan Zhang                                            
# ID  : 1600012710                                              
# 1. mrmovl+rmmovl will cause a load/use hazard and generate a bubble, so I load two elements for one time.
# 2. use iaddl to replace irmovl+addl
# 3. reorder the instructions so that I can remove some extra comparisons, because the CC has been set before.
#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len ints to dst.
# Return the number of positive ints (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
ncopy:	pushl %ebp		# Save old frame pointer
	rrmovl %esp,%ebp	# Set up new frame pointer
	pushl %esi		# Save callee-save regs
	pushl %ebx
	pushl %edi
	mrmovl 8(%ebp),%ebx	# src
	mrmovl 16(%ebp),%edx	# len
	mrmovl 12(%ebp),%ecx	# dst

##################################################################
# You can modify this portion
	# Loop header
	xorl %eax, %eax		# count = 0;
	iaddl $-1, %edx		# --len
	jle Rest		# if len <= 0, goto Rest:
Loop:
	mrmovl (%ebx), %esi		# read val1 from src...
	mrmovl 4(%ebx), %edi	# read val2 from src+1
	rmmovl %esi, (%ecx)		# store val1 to dst
	rmmovl %edi, 4(%ecx)	# store val2 to dst+1
	andl %esi, %esi		# val1 <= 0?
	jle Npos1		# if so, goto Npos1:
	iaddl $1, %eax		# count++
Npos1:
	andl %edi, %edi		# val2 <= 0?
	jle Npos2		# if so, goto Npos2:
	iaddl $1, %eax		# count++
Npos2:
	iaddl $8, %ebx		# src += 2
	iaddl $8, %ecx		# dst += 2
	iaddl $-2, %edx 	# len -= 2
	jg Loop			# if len > 0, goto Loop:
Rest:
	jne Done		# if len != 0 goto Done:
	mrmovl (%ebx), %esi		# read val from src
	rmmovl %esi, (%ecx)		# ... and store it to dst
	andl %esi, %esi		# val <= 0 ?
	jle Done
	iaddl $1, %eax		# count++
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	popl %edi               # Restore callee-save registers
	popl %ebx
	popl %esi
	rrmovl %ebp, %esp
	popl %ebp
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
